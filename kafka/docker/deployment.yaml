apiVersion: v1
items:
####################
## Kadrop Service ##
####################
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafdrop
    name: kafdrop
    namespace: egs-fuellink
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 9000
    selector:
      io.kompose.service: kafdrop
  status:
    loadBalancer: {}

####################
## Kafka Service ##
####################
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka
    name: kafka
    namespace: egs-fuellink
  spec:
    ports:
    - name: "29092"
      port: 29092
      targetPort: 29092
    - name: "8000"
      port: 8000
      targetPort: 8000
    - name: "9101"
      port: 9101
      targetPort: 9101
    selector:
      io.kompose.service: kafka
  status:
    loadBalancer: {}

#######################
## Zookeeper Service ##
#######################
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper
    namespace: egs-fuellink
    name: zookeeper
  spec:
    ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
    selector:
      io.kompose.service: zookeeper
  status:
    loadBalancer: {}

#################
## Kafdrop Pod ##
#################
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: kafdrop
    namespace: egs-fuellink
    name: kafdrop
  spec:
    containers:
    - env:
      - name: JVM_OPTS
        value: -Xms16M -Xmx48M -Xss512K -XX:-TieredCompilation -XX:+UseStringDeduplication
          -noverify
      - name: KAFKA_BROKERCONNECT
        value: kafka:29092
      image: obsidiandynamics/kafdrop
      name: kafdrop
      ports:
      - containerPort: 9000
      resources: {}
    restartPolicy: Never
  status: {}

######################
## Kafka Deployment ##
######################
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka
    namespace: egs-fuellink
    name: kafka
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kafka
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
            -o deployment
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: kafka
      spec:
        #enableServiceLinks: false # This is required due to internal kafka use of schema-registry and messing with kubernetes sutff -> https://github.com/confluentinc/schema-registry/issues/689
        containers:
        - env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: INSIDE://kafka:29092,OUTSIDE://localhost:8000
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: "0"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INSIDE
          - name: KAFKA_JMX_HOSTNAME
            value: localhost
          - name: KAFKA_JMX_PORT
            value: "9101"
          - name: KAFKA_LISTENERS
            value: INSIDE://kafka:29092,OUTSIDE://0.0.0.0:8000
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper:2181
          image: confluentinc/cp-kafka:6.2.0
          imagePullPolicy: ""
          name: broker
          ports:
          - containerPort: 29092
          - containerPort: 8000
          - containerPort: 9101
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/kafka
            name: kafka-claim0
        hostname: broker
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
  status: {}

#########################
##  Kafka Volume Claim ##
#########################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: kafka-claim0
    namespace: egs-fuellink
    name: kafka-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}

####################################
## Kafka Create Topics Deployment ##
####################################
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka-create-topics
    namespace: egs-fuellink
    name: kafka-create-topics
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kafka-create-topics
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
            -o deployment
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: kafka-create-topics
      spec:
        containers:
        - args:
          - bash
          - -c
          - echo Waiting for Kafka to be ready... && cub kafka-ready -b kafka:29092
            1 20 && kafka-topics --create --topic hello-world --if-not-exists --bootstrap-server
            kafka:29092 --partitions 1 --replication-factor 1 && kafka-topics --create
            --topic imageCaptured --if-not-exists --bootstrap-server kafka:29092 --partitions
            4 --replication-factor 1 && kafka-topics --create --topic plateRecognized
            --if-not-exists --bootstrap-server kafka:29092 --partitions 4 --replication-factor
            1 && kafka-topics --create --topic streams-plaintext-input --if-not-exists
            --bootstrap-server kafka:29092 --partitions 4 --replication-factor 1 &&
            kafka-topics --create --topic streams-wordcount-output --if-not-exists
            --bootstrap-server kafka:29092 --partitions 4 --replication-factor 1 &&
            kafka-topics --create --topic gas-pump_auth --if-not-exists --bootstrap-server
            kafka:29092 --partitions 4 --replication-factor 1 && kafka-topics --create
            --topic gas-pump_uplink --if-not-exists --bootstrap-server kafka:29092
            --partitions 4 --replication-factor 1 && kafka-topics --create --topic
            gas-pump_downlink --if-not-exists --bootstrap-server kafka:29092 --partitions
            4 --replication-factor 1 && sleep infinity
          env:
          - name: KAFKA_BROKER_ID
            value: ignored
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: ignored
          image: confluentinc/cp-kafka:6.2.0
          imagePullPolicy: ""
          name: kafka-create-topics
          resources: {}
        hostname: kafka-create-topics
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

########################################
## Plate Recognizer Stream Deployment ##
########################################
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka-plate-recognizer-stream
    namespace: egs-fuellink
    name: kafka-plate-recognizer-stream
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kafka-plate-recognizer-stream
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
            -o deployment
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: kafka-plate-recognizer-stream
      spec:
        containers:
        - args:
          - bash
          - -c
          - echo Waiting for Kafka to be ready... && cub kafka-ready -b kafka:29092
            1 20 && sh check_topics.sh && mvn exec:java -Dexec.mainClass=applications.PlateRecognizer
          env:
          - name: KAFKA_BROKER_ID
            value: ignored
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: ignored
          image: registry.deti/egs-fuellink/plate-recognizer_stream:1.0
          imagePullPolicy: ""
          name: kafka-plate-recognizer-stream
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

##########################
## Zookeeper Deployment ##
##########################
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        -o deployment
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper
    namespace: egs-fuellink
    name: zookeeper
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: zookeeper
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
            -o deployment
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: zookeeper
      spec:
        containers:
        - env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
          image: confluentinc/cp-zookeeper:6.2.0
          imagePullPolicy: ""
          name: zookeeper
          ports:
          - containerPort: 2181
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/zookeeper
            name: zookeeper-claim0
        hostname: zookeeper
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: zookeeper-claim0
          persistentVolumeClaim:
            claimName: zookeeper-claim0
  status: {}

############################
## Zookeeper Volume Claim ##
############################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper-claim0
    namespace: egs-fuellink
    name: zookeeper-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 500Mi
  status: {}
kind: List
metadata: {}

