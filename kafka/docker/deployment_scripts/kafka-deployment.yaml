apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
  namespace: egs-fuellink
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-prod.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      enableServiceLinks: false # This is required due to internal kafka use of schema-registry and messing with kubernetes sutff -> https://github.com/confluentinc/schema-registry/issues/689
      containers:
      - env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://kafka:29092,OUTSIDE://localhost:8000
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_JMX_HOSTNAME
          value: localhost
        - name: KAFKA_JMX_PORT
          value: "9101"
        - name: KAFKA_LISTENERS
          value: INSIDE://kafka:29092,OUTSIDE://0.0.0.0:8000
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: confluentinc/cp-kafka:6.2.0
        imagePullPolicy: ""
        name: broker
        ports:
        - containerPort: 29092
        - containerPort: 8000
        - containerPort: 9101
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/kafka
          name: kafka-claim0
      hostname: broker
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: kafka-claim0
        persistentVolumeClaim:
          claimName: kafka-claim0
status: {}
